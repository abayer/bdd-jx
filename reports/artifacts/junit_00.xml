<?xml version="1.0" encoding="UTF-8"?>
  <testsuite name="BddJx Suite" tests="3" failures="1" errors="0" time="0.225">
      <testcase name="upgrade ingress&#xA; Given valid parameters when running upgrade ingress creates the ingress resource for services from specified namespace&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="upgrade ingress&#xA; Given valid parameters when running upgrade ingress creates the ingress resource only for selected service from specified namespace&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="upgrade ingress&#xA; Given valid parameters when running upgrade ingress creates the ingress resource and fetch a TLS certificate for services from specified namespace&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart spring-boot-web&#xA; Given valid parameters when operating on the quickstart creates a spring-boot-web quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart spring-boot-web&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart spring-boot-web&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart open-liberty Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart spring-boot-http-gradle Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart android-quickstart Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart angular-io-quickstart Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart vertx-rest-prometheus Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart spring-boot-rest-prometheus Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart rust-http&#xA; Given valid parameters when operating on the quickstart creates a rust-http quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart rust-http&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart rust-http&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="import&#xA; Given valid parameters when running import creates an application from the specified folder and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart react-quickstart&#xA; Given valid parameters when operating on the quickstart creates a react-quickstart quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart react-quickstart&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart react-quickstart&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart rails-shopping-cart&#xA; Given valid parameters when operating on the quickstart creates a rails-shopping-cart quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart rails-shopping-cart&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart rails-shopping-cart&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[batch] quickstart node-http&#xA; Given valid parameters when operating on the quickstart creates a node-http quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0.081764856">
          <failure type="Failure">/home/kshultz/GitHub/bdd-jx/main.go:511&#xA;No future change is possible.  Bailing out early after 0.000s.&#xA;Expected&#xA;    &lt;int&gt;: 1&#xA;to match exit code:&#xA;    &lt;int&gt;: 0&#xA;/home/kshultz/GitHub/bdd-jx/main.go:526</failure>
          <system-out>      Creating application �[32mbdd-nh-1551979196�[0m in dir �[32m/tmp/bdd-699255187�[0m&#xA;      Using Git provider URL https://github.beescloud.com&#xA;WARNING: The current user cannot query secrets in the namespace default: Failed to create a Kubernetes client invalid configuration: no configuration has been provided&#xA;error: invalid configuration: no configuration has been provided&#xA;</system-out>
      </testcase>
      <testcase name="[batch] quickstart node-http&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0.071148462"></testcase>
      <testcase name="[batch] quickstart node-http&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0.071136192"></testcase>
      <testcase name="quickstart scala-akka-http-quickstart&#xA; Given valid parameters when operating on the quickstart creates a scala-akka-http-quickstart quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart scala-akka-http-quickstart&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart scala-akka-http-quickstart&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="upgrade platfrom&#xA; Given valid parameters when running upgrade platform updates the platfrom to the given vresion&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="upgrade platfrom&#xA; Given valid parameters when running upgrade platform in force mode updates always the platfrom to the given vresion&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart golang-http&#xA; Given valid parameters when operating on the quickstart creates a golang-http quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart golang-http&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart golang-http&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="create spring&#xA; Given valid parameters when running jx create spring creates a spring application and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart node-http&#xA; Given valid parameters when operating on the quickstart creates a node-http quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart node-http&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart node-http&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart python-http&#xA; Given valid parameters when operating on the quickstart creates a python-http quickstart and promotes it to staging&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart python-http&#xA; Given invalid parameters when -p param (project name) is missing exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart python-http&#xA; Given invalid parameters when -f param (filter) does not match any quickstart exits with signal 1&#xA;" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="quickstart aspnet-app Creates an application" classname="BddJx Suite" time="0">
          <skipped></skipped>
      </testcase>
  </testsuite>